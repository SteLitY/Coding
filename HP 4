/*David Chen
Home Project 4
*/
#include <iostream>
#include <vector>

using namespace std;

short menu_buttons (short menu_num);
short print_all_points();
short add_point();
short select_points();
short print_selected_points();

struct points
{
  int x,y;
};

//Main Menu
int main() 
{
cout << "Main fucking Menu\n" 
<< "  1. Add Point to list\n"
<< "  2. Select Points\n"
<< "  3. Show all Points\n"
<< "  4. Show selected points\n"
<< "  5. Exit because you're done ruining my July 4.\n"
<< " Enter a number from the menu:"; //space before Enter is done on purpose.
short menu_num;
cin >> menu_num;
menu_buttons(menu_num);
return 0;
}

//Menu buttons
short menu_buttons(short menu_num)
{
if (menu_num == 1)
{
  add_point();
}
else if (menu_num == 2)
{
  select_points();
}
else if (menu_num == 3)
{
  print_all_points();
}
else if (menu_num == 4)
{
  print_selected_points();
}
else if (menu_num == 5)
{
  cout << "\nProgram terminated.\n" << "Good-bye! \n";
  return 0;
}
else if (menu_num != 1)
{
cout << "\nYou've typed bullshit. Restarting menu:\n";
main();
}
return 0;
}

short add_point()
{
  vector <points> VectorPoints;
  points point;
  cout << "Enter X-coordinate:\n";
  cin >> point.x;
  cout << "Enter Y-coordinate:\n";
  cin >> point.y;
  cout << "\n\nGoing back to main menu\n\n";
  VectorPoints.push_back(point);
  main();
  return 0;
}


short select_points()
{
  //If ___ is between x1 and x2 and ___ is between y1 and y2
  cout << "I don't know how to do this one. This is too hard.\n";
  main();
  return 0;
}

short print_all_points()
{
  short i;
  for (auto i:VectorPoints)
  {
    cout << i << " ";
  }
  main();
  return 0;
}

short print_selected_points()
{
  cout << "I don't know how to do this one. This is too hard.\n";
  main();
  return 0;
}


// Your program implements some functionality extensively used in graphical user interfaces (GUI) and computer games. The program collects points/coordinates, given by user and stores them in a container.

// Points are represented by the structure Point
// struct Point
// {
//    int x;
//    int y;
// }
 
// The program displays a menu with the following items
//     Add a new point
//     Select points
//     Print all points
//     Print selected points
//     Exit

// The user enters a number to select an item from the menu. Depending on the user’s choice the program does the following:

//     Asks the user to enter x-coordinate and y-coordinate of a new point. Adds this new point to the vector of points.
//     Asks the user to enter 2 points. These points define a rectangle. Select all the points inside that rectangle. Selecting is done by storing in a separate vector the indexes of selected points in the main container. It is up to you if you want to select the points located right on the borders of the rectangle. Keep in mind that the user can enter any two points to define a rectangle in any order.
//     Prints all points on one line in the following format:

// (12,2)  (3,4)  (-5,0)  (39,101) 

//     Prints only the selected points in the same format as 3.
//     Ends the program execution.


// You must use functions extensively. The function main should do only the minimal work like getting user input. All menu options except Exit should be implemented by a separate function. If a function takes point as a parameter, it should take Point, not separate x- and y-coordinates.

// You should NOT use any global variables. Use references to pass vectors to functions. If the function doesn’t change the vector, it should receive that vector as a const reference
